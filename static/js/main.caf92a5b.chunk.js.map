{"version":3,"sources":["components/Banner/index.js","components/GameCard/index.js","utils/characters.js","components/ScoreBoard/index.js","components/Game/index.js","utils/helpers.js","App.js","serviceWorker.js","index.js"],"names":["Banner","props","react_default","a","createElement","className","message","GameCard","Object","assign","data-id","id","src","process","image","style","width","height","alt","name","characters","ScoreBoard","score","highScore","Game","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","clickedIds","playing","randomizeCharacters","bind","assertThisInitialized","handleGameClick","resetGame","gameOver","setState","shuffled","array","temporaryValue","randomIndex","currentIndex","length","Math","floor","random","shuffle","event","console","log","clickedId","target","getAttribute","currentClickedIds","indexOf","push","concat","_this2","components_Banner","components_ScoreBoard","map","character","components_GameCard","key","onClick","React","Component","App","components_Game","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.caf92a5b.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Banner(props) {\r\n  return (\r\n    <div className=\"jumbotron\">\r\n      <h1 className=\"display-4\">Game of Thrones Memory Tester</h1>\r\n      <p className=\"lead\">Click all 12 to win! But remember which you've clicked, if you click on the same character you lose!</p>\r\n      <hr></hr>\r\n      <p>{props.message}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Banner;","import React from \"react\";\r\n\r\nfunction GameCard(props) {\r\n  let imgStyle = {\r\n    width: \"120px\",\r\n    height: \"120px\",\r\n  };\r\n\r\n  return (\r\n    <img data-id={props.id} src={process.env.PUBLIC_URL + props.image} className=\"m-2\" style={imgStyle} alt={props.name} {...props} />\r\n  );\r\n}\r\n\r\nexport default GameCard;\r\n","export default {\r\n  characters: [\r\n    {\r\n      id: 0,\r\n      name: \"Jon Snow\",\r\n      image: \"./images/jon.jpg\",\r\n    },\r\n    {\r\n      id: 1,\r\n      name: \"Daenerys Targaryen\",\r\n      image: \"./images/daenerys.jpg\",\r\n    },\r\n    {\r\n      id: 2,\r\n      name: \"Sansa Stark\",\r\n      image: \"./images/sansa.jpg\",\r\n    },\r\n    {\r\n      id: 3,\r\n      name: \"Arya Stark\",\r\n      image: \"./images/arya.jpg\",\r\n    },\r\n    {\r\n      id: 4,\r\n      name: \"Tyrion Lannister\",\r\n      image: \"./images/tyrion.jpg\",\r\n    },\r\n    {\r\n      id: 5,\r\n      name: \"Jamie Lannister\",\r\n      image: \"./images/jamie.jpg\",\r\n    },\r\n    {\r\n      id: 6,\r\n      name: \"Cersei Lannister\",\r\n      image: \"./images/cersei.jpg\",\r\n    },\r\n    {\r\n      id: 7,\r\n      name: \"Samwell Tarly\",\r\n      image: \"./images/samwell.jpg\",\r\n    },\r\n    {\r\n      id: 8,\r\n      name: \"Brienne of Tarth\",\r\n      image: \"./images/brienne.jpg\",\r\n    },\r\n    {\r\n      id: 9,\r\n      name: \"Jorah Mormont\",\r\n      image: \"./images/jorah.jpg\",\r\n    },\r\n    {\r\n      id: 10,\r\n      name: \"Davos Seaworth\",\r\n      image: \"./images/davos.jpg\",\r\n    },\r\n    {\r\n      id: 11,\r\n      name: \"Petyr Baelish\",\r\n      image: \"./images/peter.jpg\",\r\n    },\r\n  ]\r\n}","import React from \"react\";\r\n\r\nfunction ScoreBoard(props) {\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col text-center\">\r\n        <h4>Score: {props.score}</h4>\r\n      </div>\r\n      <div className=\"col text-center\">\r\n        <h4>High Score: {props.highScore}</h4>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ScoreBoard;\r\n","import React from \"react\";\r\n\r\n// import components\r\nimport Banner from \"../Banner\";\r\nimport GameCard from \"../GameCard\";\r\nimport characters from \"../../utils/characters\";\r\nimport ScoreBoard from \"../ScoreBoard\";\r\n\r\n// import utilities\r\nimport { shuffle } from \"../../utils/helpers\";\r\n\r\nclass Game extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      score: 0,\r\n      highScore: 0,\r\n      characters: characters.characters,\r\n      clickedIds: [],\r\n      playing: false,\r\n      message: \"Click on any character picture to begin.\"\r\n    };\r\n\r\n    this.randomizeCharacters = this.randomizeCharacters.bind(this);\r\n    this.handleGameClick = this.handleGameClick.bind(this);\r\n    this.resetGame = this.resetGame.bind(this);\r\n    this.gameOver = this.gameOver.bind(this);\r\n  }\r\n\r\n  // componentDidMount() {\r\n  //   this.resetGame();\r\n  // }\r\n\r\n  resetGame() {\r\n    this.randomizeCharacters();\r\n    this.setState({\r\n      score: 0,\r\n      clickedIds: [],\r\n      playing: false,\r\n    });\r\n  }\r\n\r\n  randomizeCharacters() {\r\n    let shuffled = shuffle(this.state.characters);\r\n    this.setState({\r\n      characters: shuffled\r\n    });\r\n  }\r\n\r\n  handleGameClick(event) {\r\n    console.log(this.state.playing);\r\n    if (!this.state.playing) {\r\n      this.setState({\r\n        playing: true,\r\n        message: \"Don't forget who you've clicked!\"\r\n      });\r\n    }\r\n\r\n    let clickedId = event.target.getAttribute(\"data-id\");\r\n    let currentClickedIds = this.state.clickedIds;\r\n\r\n    //console.log(event.target);\r\n\r\n    if (this.state.clickedIds.indexOf(clickedId) >= 0) {\r\n      // GAME OVER\r\n      this.gameOver();\r\n    } else {\r\n      this.setState({\r\n        score: this.state.score + 1\r\n      });\r\n      currentClickedIds.push(clickedId);\r\n      this.setState({\r\n        characters: currentClickedIds\r\n      });\r\n      //console.log(this.state.clickedIds);\r\n    }\r\n    this.randomizeCharacters();\r\n  }\r\n\r\n  gameOver() {\r\n    this.setState({\r\n      message: `Woops! You've clicked that character already. Your score was ${\r\n        this.state.score\r\n      }`\r\n    });\r\n    // check if the user got a new high score\r\n    if (this.state.score > this.state.highScore) {\r\n      this.setState({\r\n        highScore: this.state.score\r\n      });\r\n    }\r\n    this.resetGame();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Banner message={this.state.message} />\r\n        <ScoreBoard score={this.state.score} highScore={this.state.highScore} />\r\n        <div className=\"d-flex flex-wrap justify-content-center\">\r\n          {this.state.characters.map(character => {\r\n            return (\r\n              <GameCard\r\n                key={character.id}\r\n                id={character.id}\r\n                name={character.name}\r\n                image={character.image}\r\n                onClick={this.handleGameClick}\r\n              />\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Game;\r\n","export function shuffle(array) {\r\n  var currentIndex = array.length, temporaryValue, randomIndex;\r\n\r\n  // While there remain elements to shuffle...\r\n  while (0 !== currentIndex) {\r\n\r\n    // Pick a remaining element...\r\n    randomIndex = Math.floor(Math.random() * currentIndex);\r\n    currentIndex -= 1;\r\n\r\n    // And swap it with the current element.\r\n    temporaryValue = array[currentIndex];\r\n    array[currentIndex] = array[randomIndex];\r\n    array[randomIndex] = temporaryValue;\r\n  }\r\n\r\n  return array;\r\n}","import React from \"react\";\r\nimport \"./App.css\";\r\nimport Game from \"./components/Game\";\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"container\">\r\n      <Game />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}